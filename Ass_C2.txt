"""Write C++ program for storing binary number using doubly linked lists. Write functionsa) To compute 1‘s and 2‘s complement 
b) Add two binary numbers"""


#include <iostream>
/*
1+0=1 c=0; 1+1=0 c=1 0+0=0 c=0
1+0=0 c=1; 1+1=1 c=1 0+0=1 c=1*/
using namespace std;
/* run this program using the console pauser or add your own getch, system("pause") or input loop */
struct Node {
	//char status;
	int bit;
	struct Node *next;
	struct Node *prev;
}node,*head,*end,*head1,*end1,*head2,*end2;

struct Node * create(int bit,char status1='A')
{
	struct Node *t=new Node(); //)malloc(sizeof(node));
	t->bit=bit;
	t->next=NULL;
	t->prev=NULL;
	return(t);
}
struct Node * addNode(int bit,char status1='A')
{
	struct Node *t=create(bit); //)malloc(sizeof(node));
	if(head) //if head is not NULL
	{
	  end->next=t;	
	  t->prev=end;
	  end=t;
	}else
	{ //first node is set as head and end
		head=t;
		end=t;
	}
	return(head);	
}

void display(struct Node *t1,int fl=0 )
{ //t is head node
	while(t1) //t1 is not nULL
	{
		cout<<t1->bit;//<<":"<<t1->status<<"\t";
		//cout<<"\n";
		if(fl==1)
		{t1=t1->prev;  //reverse
		continue;
	}
		t1=t1->next; //forward
	}
}
struct Node* getEnd(struct Node* h)
{ struct Node *t=h;
	while(t->next) //t->next Not NULL
	{
		t=t->next; //traversal
	}
	return(t);
}
void complement(struct Node *t1,int fl=0)
{   
head=NULL;
end=NULL;
head=t1;
cout<<"\nOnes Complement\n";
int carry=1;
	while(t1)
	{   if(t1->bit==0)
		{
		  t1->bit=1;
		  //cout<<1;
	    }
		else{
		//cout<<0;
		t1->bit=0;}
		t1=t1->next;
	} 
	
	end=getEnd(head);
	display(end,1); //ones complement
	if(fl==1) //two complement
	{
		t1=head;
		while(t1)
		{
		int last=t1->bit+carry;
		t1->bit=last%2;
		//cout<<"\nlast:"<<last%2<<" carry:"<<carry<<" node:"<<t1->bit;
		
		if(last>=2)
		carry=1;
		
		carry=last/2;
		t1=t1->next;
	}
	cout<<"\n";
	display(end,1);
	}
}

struct Node* bin(int no)
{
	while(no) //not zero
	{
		int bit=no%2;
		//cout<<bit;
		head=addNode(bit);
		no=no/2;
	}
	return(head);
}

int main(int argc, char** argv) {
	cout<<"Welcome to Binary Operations\n";
	int n1,n2;
	cout<<"Enter 2 nos to add:";
	cin>>n1>>n2;
	
	head1=bin(n1);
	end1=getEnd(head1);
	head=NULL;
	end=NULL;
	//cout<<"end:"<<end1->bit;
	head2=bin(n2);
	end2=getEnd(head2);
	cout<<"\nDisplay:";
	display(end1,1);
	cout<<"\n";
	display(end2,1);
	
	head=NULL;
	end=NULL;
	
	cout<<"\nAddition:\n";
	head1=bin(n1+n2);
	end1=getEnd(head1);
	display(end1,1);
	cout<<"\n";
	complement(head1,1);
	return 0;
}